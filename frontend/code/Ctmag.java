/*
	This simple extension of the java.awt.Frame class
	contains all the elements necessary to act as the
	main window of an application.
 */

import java.awt.*;
import java.beans.*;
import symantec.itools.awt.BorderPanel;
import symantec.itools.awt.TabPanel;
import symantec.itools.awt.ComboBox;
import java.awt.event.*;
import java.io.*;

public class Ctmag extends java.awt.Frame       
{
    public PrintJob getPrintJob()
    {
        return null;
    }

    public void importMagCurveTest(MagCurveTest m) throws java.beans.PropertyVetoException
    {
        magcurvetest = m;                
        passObjects();
        testcontrolengine.importOptionsSettings(magcurvetest.maincurve);
    }

    public void newMagCurveTest()
    {        
        magcurvetest = new MagCurveTest();
        optionsdialog.optionsbuttonhandler.getSelection();
        magcurvetest.setVoltageThreshold(testcontrolengine.voltage_threshold);
        magcurvetest.setCurrentThreshold(testcontrolengine.current_threshold);
        magcurvetest.setVoltageRatioThreshold(testcontrolengine.voltage_ratio_threshold);
        magcurvetest.setCurrentRatioThreshold(testcontrolengine.current_ratio_threshold);                
        passObjects();
    }
    
    private void passObjects()
    {
        printreportbuttonhandler.setObjects(magcurvetest);
        voltageratioresultshandler.setObjects(magcurvetest);
        currentratioresultshandler.setObjects(magcurvetest);
        magcurveresultshandler.setObjects(magcurvetest);
        saveproc.setObjects(magcurvetest);
        importtest.setObjects(magcurvetest);
    }
    
	public Ctmag()
	{
		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		
		//{{INIT_CONTROLS
		setLayout(new BorderLayout(0,0));
		setVisible(false);
		setSize(640,480);
		openFileDialog1 = new java.awt.FileDialog(this);
		openFileDialog1.setMode(FileDialog.LOAD);
		openFileDialog1.setTitle("FileDialog");
		//$$ openFileDialog1.move(168,228);
		westpanel = new java.awt.Panel();
		GridBagLayout gridBagLayout;
		gridBagLayout = new GridBagLayout();
		westpanel.setLayout(gridBagLayout);
		westpanel.setBounds(0,23,142,434);
		westpanel.setFont(new Font("Dialog", Font.PLAIN, 12));
		westpanel.setBackground(new Color(12632256));
		add("West", westpanel);
		testsettingspanel = new java.awt.Panel();
		testsettingspanel.setLayout(new GridLayout(1,1,0,0));
		testsettingspanel.setBounds(0,0,142,319);
		testsettingspanel.setFont(new Font("Dialog", Font.PLAIN, 12));
		testsettingspanel.setBackground(new Color(12632256));
		GridBagConstraints gbc;
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 1;
		gbc.gridheight = 2;
		gbc.weighty = 5.0;
		gbc.fill = GridBagConstraints.BOTH;
		gbc.insets = new Insets(0,0,0,0);
		gbc.ipady = 100;
		((GridBagLayout)westpanel.getLayout()).setConstraints(testsettingspanel, gbc);
		westpanel.add(testsettingspanel);
		tabPanel1 = new symantec.itools.awt.TabPanel();
		try {
			java.lang.String[] tempString = new java.lang.String[2];
			tempString[0] = new java.lang.String("VT");
			tempString[1] = new java.lang.String("CT");
			tabPanel1.setPanelLabels(tempString);
		}
		catch(java.beans.PropertyVetoException e) { }
		try {
			tabPanel1.setCurrentPanelNdx(1);
		}
		catch(java.beans.PropertyVetoException e) { }
		tabPanel1.setBounds(0,0,142,319);
		tabPanel1.setFont(new Font("Dialog", Font.PLAIN, 12));
		testsettingspanel.add(tabPanel1);
		settingspanel2 = new java.awt.Panel();
		settingspanel2.setLayout(new GridLayout(1,1,0,0));
		settingspanel2.setVisible(false);
		settingspanel2.setBounds(12,33,-4,436);
		settingspanel2.setBackground(new Color(12632256));
		tabPanel1.add(settingspanel2);
		settingspanel3 = new java.awt.Panel();
		settingspanel3.setLayout(new GridLayout(1,1,0,0));
		settingspanel3.setBounds(12,33,-4,436);
		tabPanel1.add(settingspanel3);
		phasepanel = new java.awt.Panel();
		gridBagLayout = new GridBagLayout();
		phasepanel.setLayout(gridBagLayout);
		phasepanel.setBounds(0,319,142,115);
		phasepanel.setFont(new Font("Dialog", Font.PLAIN, 11));
		phasepanel.setBackground(new Color(12632256));
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 3;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		gbc.insets = new Insets(0,0,0,0);
		((GridBagLayout)westpanel.getLayout()).setConstraints(phasepanel, gbc);
		westpanel.add(phasepanel);
		redbutton = new java.awt.Button();
		redbutton.setLabel("RED");
		redbutton.setBounds(0,69,41,23);
		redbutton.setFont(new Font("Dialog", Font.PLAIN, 12));
		redbutton.setForeground(new Color(16711680));
		redbutton.setBackground(new Color(12632256));
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 4;
		gbc.weightx = 1.0;
		gbc.weighty = 1.0;
		gbc.anchor = GridBagConstraints.NORTHEAST;
		gbc.fill = GridBagConstraints.BOTH;
		gbc.insets = new Insets(0,0,0,0);
		((GridBagLayout)phasepanel.getLayout()).setConstraints(redbutton, gbc);
		phasepanel.add(redbutton);
		whitebutton = new java.awt.Button();
		whitebutton.setLabel("WHITE");
		whitebutton.setBounds(41,69,53,23);
		whitebutton.setFont(new Font("Dialog", Font.BOLD, 12));
		whitebutton.setForeground(new Color(16777215));
		whitebutton.setBackground(new Color(12632256));
		gbc = new GridBagConstraints();
		gbc.gridx = 1;
		gbc.gridy = 4;
		gbc.weightx = 1.0;
		gbc.weighty = 1.0;
		gbc.anchor = GridBagConstraints.NORTH;
		gbc.fill = GridBagConstraints.BOTH;
		gbc.insets = new Insets(0,0,0,0);
		((GridBagLayout)phasepanel.getLayout()).setConstraints(whitebutton, gbc);
		phasepanel.add(whitebutton);
		bluebutton = new java.awt.Button();
		bluebutton.setLabel("BLUE");
		bluebutton.setBounds(94,69,48,23);
		bluebutton.setFont(new Font("Dialog", Font.PLAIN, 12));
		bluebutton.setForeground(new Color(255));
		bluebutton.setBackground(new Color(12632256));
		gbc = new GridBagConstraints();
		gbc.gridx = 2;
		gbc.gridy = 4;
		gbc.weightx = 1.0;
		gbc.weighty = 1.0;
		gbc.anchor = GridBagConstraints.NORTHEAST;
		gbc.fill = GridBagConstraints.BOTH;
		gbc.insets = new Insets(0,0,0,0);
		((GridBagLayout)phasepanel.getLayout()).setConstraints(bluebutton, gbc);
		phasepanel.add(bluebutton);
		magcurvebutton = new java.awt.Button();
		magcurvebutton.setLabel("Start Magcurve Test");
		magcurvebutton.setBounds(0,0,142,23);
		magcurvebutton.setFont(new Font("Dialog", Font.PLAIN, 12));
		magcurvebutton.setBackground(new Color(12632256));
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 0;
		gbc.gridwidth = 3;
		gbc.weighty = 1.0;
		gbc.fill = GridBagConstraints.BOTH;
		gbc.insets = new Insets(0,0,0,0);
		((GridBagLayout)phasepanel.getLayout()).setConstraints(magcurvebutton, gbc);
		phasepanel.add(magcurvebutton);
		currentbutton = new java.awt.Button();
		currentbutton.setLabel("Start Current Ratio Test");
		currentbutton.setBounds(0,23,142,23);
		currentbutton.setFont(new Font("Dialog", Font.PLAIN, 12));
		currentbutton.setBackground(new Color(12632256));
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 1;
		gbc.gridwidth = 3;
		gbc.weighty = 1.0;
		gbc.fill = GridBagConstraints.BOTH;
		gbc.insets = new Insets(0,0,0,0);
		((GridBagLayout)phasepanel.getLayout()).setConstraints(currentbutton, gbc);
		phasepanel.add(currentbutton);
		voltagebutton = new java.awt.Button();
		voltagebutton.setLabel("Start Voltage Ratio Test");
		voltagebutton.setBounds(0,46,142,23);
		voltagebutton.setFont(new Font("Dialog", Font.PLAIN, 12));
		voltagebutton.setBackground(new Color(12632256));
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 2;
		gbc.gridwidth = 3;
		gbc.weighty = 1.0;
		gbc.anchor = GridBagConstraints.SOUTH;
		gbc.fill = GridBagConstraints.BOTH;
		gbc.insets = new Insets(0,0,0,0);
		((GridBagLayout)phasepanel.getLayout()).setConstraints(voltagebutton, gbc);
		phasepanel.add(voltagebutton);
		stopbutton = new java.awt.Button();
		stopbutton.setLabel("STOP TEST");
		stopbutton.setBounds(0,92,142,23);
		stopbutton.setFont(new Font("Dialog", Font.PLAIN, 12));
		stopbutton.setForeground(new Color(0));
		stopbutton.setBackground(new Color(12632256));
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 5;
		gbc.gridwidth = 3;
		gbc.weighty = 1.0;
		gbc.anchor = GridBagConstraints.SOUTH;
		gbc.fill = GridBagConstraints.BOTH;
		gbc.insets = new Insets(0,0,0,0);
		((GridBagLayout)phasepanel.getLayout()).setConstraints(stopbutton, gbc);
		phasepanel.add(stopbutton);
		settingspanel1 = new java.awt.Panel();
		settingspanel1.setLayout(new GridLayout(1,1,0,0));
		settingspanel1.setBounds(0,0,0,0);
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 0;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		gbc.insets = new Insets(0,0,0,0);
		((GridBagLayout)westpanel.getLayout()).setConstraints(settingspanel1, gbc);
		westpanel.add(settingspanel1);
		southpanel = new java.awt.Panel();
		southpanel.setLayout(new GridLayout(1,4,0,0));
		southpanel.setBounds(0,457,640,23);
		southpanel.setFont(new Font("Dialog", Font.PLAIN, 12));
		add("South", southpanel);
		newtestbutton = new java.awt.Button();
		newtestbutton.setLabel("New Test");
		newtestbutton.setBounds(256,0,128,23);
		newtestbutton.setBackground(new Color(12632256));
		southpanel.add(newtestbutton);
		savetestbutton = new java.awt.Button();
		savetestbutton.setLabel("Save Test As");
		savetestbutton.setBounds(0,0,128,23);
		savetestbutton.setBackground(new Color(12632256));
		southpanel.add(savetestbutton);
		importtestbutton = new java.awt.Button();
		importtestbutton.setLabel("Import Test");
		importtestbutton.setBounds(128,0,128,23);
		importtestbutton.setBackground(new Color(12632256));
		southpanel.add(importtestbutton);
		printreportbutton = new java.awt.Button();
		printreportbutton.setLabel("Print Report");
		printreportbutton.setBounds(384,0,128,23);
		printreportbutton.setBackground(new Color(12632256));
		southpanel.add(printreportbutton);
		exitbutton = new java.awt.Button();
		exitbutton.setLabel("EXIT");
		exitbutton.setBounds(512,0,128,23);
		exitbutton.setBackground(new Color(12632256));
		southpanel.add(exitbutton);
		northpanel = new java.awt.Panel();
		northpanel.setLayout(new GridLayout(1,1,0,0));
		northpanel.setBounds(0,0,640,23);
		northpanel.setFont(new Font("Dialog", Font.PLAIN, 11));
		add("North", northpanel);
		statustextfield = new java.awt.TextField();
		statustextfield.setBounds(0,0,640,23);
		statustextfield.setFont(new Font("Dialog", Font.PLAIN, 12));
		northpanel.add(statustextfield);
		centerpanel = new java.awt.Panel();
		centerpanel.setLayout(new GridLayout(2,1,0,0));
		centerpanel.setBounds(142,23,498,434);
		add("Center", centerpanel);
		mainborderpanel = new symantec.itools.awt.BorderPanel();
		try {
			mainborderpanel.setLabel("CT Magnetisation Curve");
		}
		catch(java.beans.PropertyVetoException e) { }
		mainborderpanel.setLayout(new GridLayout(1,1,0,0));
		mainborderpanel.setBounds(0,0,498,217);
		mainborderpanel.setBackground(new Color(12632256));
		centerpanel.add(mainborderpanel);
		mainpanel = new java.awt.Panel();
		mainpanel.setLayout(new GridLayout(1,1,0,0));
		mainpanel.setBounds(0,0,477,176);
		mainpanel.setBackground(new Color(16777215));
		mainborderpanel.add(mainpanel);
		combipanel = new java.awt.Panel();
		combipanel.setLayout(new GridLayout(1,2,0,0));
		combipanel.setBounds(0,217,498,217);
		centerpanel.add(combipanel);
		curvesborderpanel = new symantec.itools.awt.BorderPanel();
		try {
			curvesborderpanel.setLabel("3 Phase CT Magnetisation Curve");
		}
		catch(java.beans.PropertyVetoException e) { }
		curvesborderpanel.setLayout(new GridLayout(1,1,0,0));
		curvesborderpanel.setBounds(0,0,249,217);
		curvesborderpanel.setBackground(new Color(12632256));
		combipanel.add(curvesborderpanel);
		curvespanel = new java.awt.Panel();
		curvespanel.setLayout(new GridLayout(1,1,0,0));
		curvespanel.setBounds(0,0,228,176);
		curvespanel.setBackground(new Color(16777215));
		curvesborderpanel.add(curvespanel);
		resultspanel = new java.awt.Panel();
		resultspanel.setLayout(new GridLayout(3,1,0,0));
		resultspanel.setBounds(249,0,249,217);
		resultspanel.setBackground(new Color(12632256));
		combipanel.add(resultspanel);
		resultspanel1 = new java.awt.Panel();
		resultspanel1.setLayout(new GridLayout(1,1,0,0));
		resultspanel1.setBounds(0,0,20,40);
		resultspanel.add(resultspanel1);
		resultspanel2 = new java.awt.Panel();
		resultspanel2.setLayout(new GridLayout(1,1,0,0));
		resultspanel2.setBounds(0,0,20,40);
		resultspanel.add(resultspanel2);
		resultspanel3 = new java.awt.Panel();
		resultspanel3.setLayout(new GridLayout(1,1,0,0));
		resultspanel3.setBounds(0,0,20,40);
		resultspanel.add(resultspanel3);
		setTitle("CT & VT Calibration Tester");
		//}}
		
		//{{INIT_MENUS
		mainMenuBar = new java.awt.MenuBar();
		mufile = new java.awt.Menu("File");
		minewtest = new java.awt.MenuItem("New Test");
		minewtest.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_N,false));
		mufile.add(minewtest);
		minexttest = new java.awt.MenuItem("Next Test");
		minexttest.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_E,false));
		mufile.add(minexttest);
		miopentest = new java.awt.MenuItem("Import Test ...");
		miopentest.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_I,false));
		mufile.add(miopentest);
		mufile.addSeparator();
		misavetest = new java.awt.MenuItem("Save Test");
		misavetest.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_S,false));
		mufile.add(misavetest);
		misavetestas = new java.awt.MenuItem("Save Test As...");
		misavetestas.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_A,false));
		mufile.add(misavetestas);
		mufile.addSeparator();
		mitextfile = new java.awt.MenuItem("Generate Text File");
		mitextfile.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_G,false));
		mufile.add(mitextfile);
		mireportprint = new java.awt.MenuItem("Print Report");
		mireportprint.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_P,false));
		mufile.add(mireportprint);
		mufile.addSeparator();
		milinks = new java.awt.MenuItem("Links");
		milinks.setEnabled(false);
		mufile.add(milinks);
		mufile.addSeparator();
		miExit = new java.awt.MenuItem("Exit");
		miExit.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_X,false));
		mufile.add(miExit);
		mainMenuBar.add(mufile);
		musettings = new java.awt.Menu("Settings");
		migeneralsettings = new java.awt.MenuItem("General Settings ...");
		migeneralsettings.setEnabled(false);
		musettings.add(migeneralsettings);
		musettings.addSeparator();
		mictsettings = new java.awt.MenuItem("CT Settings ...");
		mictsettings.setEnabled(false);
		musettings.add(mictsettings);
		musettings.addSeparator();
		mivtsettings = new java.awt.MenuItem("VT Settings ...");
		mivtsettings.setEnabled(false);
		musettings.add(mivtsettings);
		musettings.addSeparator();
		options_menu_item = new java.awt.MenuItem("Options ...");
		options_menu_item.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_O,false));
		musettings.add(options_menu_item);
		mainMenuBar.add(musettings);
		mutest = new java.awt.Menu("Test");
		miredphase = new java.awt.MenuItem("Assign to RED Phase");
		miredphase.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_R,false));
		mutest.add(miredphase);
		miwhitephase = new java.awt.MenuItem("Assign to WHITE Phase");
		miwhitephase.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_W,false));
		mutest.add(miwhitephase);
		mibluephase = new java.awt.MenuItem("Assign to BLUE Phase");
		mibluephase.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_B,false));
		mutest.add(mibluephase);
		mutest.addSeparator();
		mistartmagcurve = new java.awt.MenuItem("Start Magcurve Test");
		mistartmagcurve.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_M,false));
		mutest.add(mistartmagcurve);
		mutest.addSeparator();
		mistartcurrentratio = new java.awt.MenuItem("Start Current Ratio Test");
		mistartcurrentratio.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_C,false));
		mutest.add(mistartcurrentratio);
		mutest.addSeparator();
		mistartvoltageratio = new java.awt.MenuItem("Start Voltage Ratio Test");
		mistartvoltageratio.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_V,false));
		mutest.add(mistartvoltageratio);
		mutest.addSeparator();
		mistoptest = new java.awt.MenuItem("STOP TEST");
		mistoptest.setShortcut(new MenuShortcut(java.awt.event.KeyEvent.VK_T,false));
		mutest.add(mistoptest);
		mainMenuBar.add(mutest);
		muaction = new java.awt.Menu("Action");
		miactionnewtest = new java.awt.MenuItem("New Test");
		muaction.add(miactionnewtest);
		muaction.addSeparator();
		miactionsave = new java.awt.MenuItem("Save Test");
		muaction.add(miactionsave);
		muaction.addSeparator();
		miactionimport = new java.awt.MenuItem("Import Test");
		muaction.add(miactionimport);
		muaction.addSeparator();
		miactionprint = new java.awt.MenuItem("Print Report");
		muaction.add(miactionprint);
		muaction.addSeparator();
		miactionexit = new java.awt.MenuItem("EXIT");
		muaction.add(miactionexit);
		mainMenuBar.add(muaction);
		miwindow = new java.awt.Menu("Window");
		miwindowlinks = new java.awt.MenuItem("Links");
		miwindowlinks.setEnabled(false);
		miwindow.add(miwindowlinks);
		mainMenuBar.add(miwindow);
		muhelp = new java.awt.Menu("Help");
		mainMenuBar.setHelpMenu(muhelp);
		mihelpitems = new java.awt.MenuItem("Help About...");
		muhelp.add(mihelpitems);
		mihelpcontents = new java.awt.MenuItem("Help Contents...");
		muhelp.add(mihelpcontents);
		mainMenuBar.add(muhelp);
		setMenuBar(mainMenuBar);
		//$$ mainMenuBar.move(4,277);
		//}}
		
		//{{REGISTER_LISTENERS
		SymWindow aSymWindow = new SymWindow();
		this.addWindowListener(aSymWindow);
		SymAction lSymAction = new SymAction();
		mihelpitems.addActionListener(lSymAction);
		miExit.addActionListener(lSymAction);
		
		//}}
		// Add panel objects
		generalsettingspanel = new GeneralSettingsPanel();
		settingspanel1.add(generalsettingspanel);
		vtsettingspanel = new VTSettingsPanel();
		settingspanel2.add(vtsettingspanel);
		ctsettingspanel = new CTSettingsPanel();
		settingspanel3.add(ctsettingspanel);
		magcurveresults = new MagCurveResults();
		resultspanel1.add(magcurveresults);
		currentratioresults = new CurrentRatioResults();
		resultspanel2.add(currentratioresults);
		voltageratioresults = new VoltageRatioResults();
		resultspanel3.add(voltageratioresults);
		
		// Implement Action Button Handlers
		
		printreportbuttonhandler = new PrintReportButtonHandler(this);
		printreportbutton.addActionListener(printreportbuttonhandler);
		
		exitbuttonhandler = new ExitButtonHandler(this);
		exitbutton.addActionListener(exitbuttonhandler);

		testhandler = new TestHandler(this);
		importtestbutton.addActionListener(testhandler);
		savetestbutton.addActionListener(testhandler);
		        
        // Menu item handlers
		miopentest.addActionListener(testhandler);
		misavetest.addActionListener(testhandler);
		misavetestas.addActionListener(testhandler);
		mireportprint.addActionListener(printreportbuttonhandler);


		miactionprint.addActionListener(printreportbuttonhandler);
		miactionsave.addActionListener(testhandler);
		miactionexit.addActionListener(exitbuttonhandler);
		miactionimport.addActionListener(testhandler);

        // Instantiate resultpanel handlers			
        magcurveresultshandler = new MagCurveResultsHandler(this);
        currentratioresultshandler = new CurrentRatioResultsHandler(this);
        voltageratioresultshandler = new VoltageRatioResultsHandler(this);

		// implement new dialog boxes

        optionsdialog = new OptionsDialog(this, false);
	    optionsmenuhandler = new OptionsMenuHandler(this,optionsdialog);
	    options_menu_item.addActionListener(optionsmenuhandler);				
        
        testreportdialog = new TestReportDialog(this, false);                
        
        // Instantiate report panels
        reportheader = new ReportHeader();
        testreportdialog.borderpanel1.add(reportheader);
        
        reportfooter = new ReportFooter();
        testreportdialog.borderpanel8.add(reportfooter);
        
        generalreportsettings = new GeneralReportSettings();
        testreportdialog.borderpanel2.add(generalreportsettings);

        ctreportsettings = new CTReportSettings();
        testreportdialog.borderpanel3.add(ctreportsettings);
        
        vtreportsettings = new VTReportSettings();
        testreportdialog.borderpanel4.add(vtreportsettings);
        
        reportphasecanvas = new ReportPhaseCanvas();
        testreportdialog.borderpanel7.add(reportphasecanvas);
        
        kneepointtable = new KneePointTable();
        testreportdialog.borderpanel6.add(kneepointtable);        
        
        reportmagcurveresults = new MagCurveReportResults();
        testreportdialog.reportpanel5a.add(reportmagcurveresults);

        reportcurrentratioresults = new CurrentRatioReportResults();
        testreportdialog.reportpanel5b.add(reportcurrentratioresults);
 
        reportvoltageratioresults = new VoltageRatioReportResults();
        testreportdialog.reportpanel5c.add(reportvoltageratioresults);

		reportbuttonhandler = new ReportButtonHandler(testreportdialog,this);
		testreportdialog.printreportacceptbutton.addActionListener(reportbuttonhandler);		
        testreportdialog.printreportignorebutton.addActionListener(reportbuttonhandler);
        
        ratiodialog = new RatioDialog(this, false);
        
        // Instantiate objects 
        saveproc = new SaveProc(this);
        importtest = new ImportTest(this);
        
        maincanvas = new MainCanvas();
        mainpanel.add(maincanvas);      

        phasecanvas = new PhaseCanvas();
        curvespanel.add(phasecanvas); 
        
        testcontrolengine = new TestControlEngine(this);    //!!! 
        optionsdialog.instantiateFields();         
        newMagCurveTest();
        
        // Pass handles to the test buttons and menu items
		redbutton.addActionListener(testcontrolengine);
		whitebutton.addActionListener(testcontrolengine);
		bluebutton.addActionListener(testcontrolengine);
		magcurvebutton.addActionListener(testcontrolengine);
		currentbutton.addActionListener(testcontrolengine);
		voltagebutton.addActionListener(testcontrolengine);
		stopbutton.addActionListener(testcontrolengine);
		newtestbutton.addActionListener(testcontrolengine);
		
		miredphase.addActionListener(testcontrolengine);
		miwhitephase.addActionListener(testcontrolengine);
		mibluephase.addActionListener(testcontrolengine);
		mistartmagcurve.addActionListener(testcontrolengine);
		mistartcurrentratio.addActionListener(testcontrolengine);
		mistartvoltageratio.addActionListener(testcontrolengine);
		mistoptest.addActionListener(testcontrolengine);
		miactionnewtest.addActionListener(testcontrolengine);        
		minewtest.addActionListener(testcontrolengine);        
        minexttest.addActionListener(testcontrolengine);
        
        helpcontentshandler = new HelpContentsHandler(this);
        mihelpcontents.addActionListener(helpcontentshandler);
        kneepointtablehandler = new KneePointTableHandler(this);
                
        textfilehandler = new TextFileHandler(this); 
        mitextfile.addActionListener(textfilehandler);
	}
	
	public Ctmag(String title)
	{
		this();
		setTitle(title);
	}
	
    /**
     * Shows or hides the component depending on the boolean flag b.
     * @param b  if true, show the component; otherwise, hide the component.
     * @see java.awt.Component#isVisible
     */
    public void setVisible(boolean b)
	{
		if(b)
		{
			setLocation(50, 50);
		}	
		super.setVisible(b);
	}
	
	static public void main(String args[])
	{
		(new Ctmag()).setVisible(true);
	}
	
	public void addNotify()
	{
		// Record the size of the window prior to calling parents addNotify.
		Dimension d = getSize();
		
		super.addNotify();
	
		if (fComponentsAdjusted)
			return;
	
		// Adjust components according to the insets
		setSize(insets().left + insets().right + d.width, insets().top + insets().bottom + d.height);
		Component components[] = getComponents();
		for (int i = 0; i < components.length; i++)
		{
			Point p = components[i].getLocation();
			p.translate(insets().left, insets().top);
			components[i].setLocation(p);
		}
		fComponentsAdjusted = true;
	}
	
	// Used for addNotify check.
	boolean fComponentsAdjusted = false;
	
	//{{DECLARE_CONTROLS
	java.awt.FileDialog openFileDialog1;
	java.awt.Panel westpanel;
	java.awt.Panel testsettingspanel;
	symantec.itools.awt.TabPanel tabPanel1;
	java.awt.Panel settingspanel2;
	java.awt.Panel settingspanel3;
	java.awt.Panel phasepanel;
	java.awt.Button redbutton;
	java.awt.Button whitebutton;
	java.awt.Button bluebutton;
	java.awt.Button magcurvebutton;
	java.awt.Button currentbutton;
	java.awt.Button voltagebutton;
	java.awt.Button stopbutton;
	java.awt.Panel settingspanel1;
	java.awt.Panel southpanel;
	java.awt.Button newtestbutton;
	java.awt.Button savetestbutton;
	java.awt.Button importtestbutton;
	java.awt.Button printreportbutton;
	java.awt.Button exitbutton;
	java.awt.Panel northpanel;
	java.awt.TextField statustextfield;
	java.awt.Panel centerpanel;
	symantec.itools.awt.BorderPanel mainborderpanel;
	java.awt.Panel mainpanel;
	java.awt.Panel combipanel;
	symantec.itools.awt.BorderPanel curvesborderpanel;
	java.awt.Panel curvespanel;
	java.awt.Panel resultspanel;
	java.awt.Panel resultspanel1;
	java.awt.Panel resultspanel2;
	java.awt.Panel resultspanel3;
	//}}
	
	//{{DECLARE_MENUS
	java.awt.MenuBar mainMenuBar;
	java.awt.Menu mufile;
	java.awt.MenuItem minewtest;
	java.awt.MenuItem minexttest;
	java.awt.MenuItem miopentest;
	java.awt.MenuItem misavetest;
	java.awt.MenuItem misavetestas;
	java.awt.MenuItem mitextfile;
	java.awt.MenuItem mireportprint;
	java.awt.MenuItem milinks;
	java.awt.MenuItem miExit;
	java.awt.Menu musettings;
	java.awt.MenuItem migeneralsettings;
	java.awt.MenuItem mictsettings;
	java.awt.MenuItem mivtsettings;
	java.awt.MenuItem options_menu_item;
	java.awt.Menu mutest;
	java.awt.MenuItem miredphase;
	java.awt.MenuItem miwhitephase;
	java.awt.MenuItem mibluephase;
	java.awt.MenuItem mistartmagcurve;
	java.awt.MenuItem mistartcurrentratio;
	java.awt.MenuItem mistartvoltageratio;
	java.awt.MenuItem mistoptest;
	java.awt.Menu muaction;
	java.awt.MenuItem miactionnewtest;
	java.awt.MenuItem miactionsave;
	java.awt.MenuItem miactionimport;
	java.awt.MenuItem miactionprint;
	java.awt.MenuItem miactionexit;
	java.awt.Menu miwindow;
	java.awt.MenuItem miwindowlinks;
	java.awt.Menu muhelp;
	java.awt.MenuItem mihelpitems;
	java.awt.MenuItem mihelpcontents;
	//}}
	
	
	// Declare Menu Handlers
	OptionsMenuHandler          optionsmenuhandler;	
//	RedButtonHandler            redbuttonhandler;
//	WhiteButtonHandler          whitebuttonhandler;
//	BlueButtonHandler           bluebuttonhandler;
//	MagcurveButtonHandler       magcurvebuttonhandler;
//	CurrentButtonHandler        currentbuttonhandler;
//	VoltageButtonHandler        voltagebuttonhandler;
//	StopButtonHandler           stopbuttonhandler;
//    NewTestButtonHandler        newtestbuttonhandler;
	PrintReportButtonHandler    printreportbuttonhandler;
    ReportButtonHandler	        reportbuttonhandler;
	TestHandler                 testhandler;
	ExitButtonHandler           exitbuttonhandler;

	
	// Declare Objects
	MagCurveTest                magcurvetest;
	TestControlEngine           testcontrolengine;
	MainCanvas                  maincanvas;	
	PhaseCanvas                 phasecanvas;
	OptionsDialog               optionsdialog;
	RatioDialog                 ratiodialog;
	TestReportDialog            testreportdialog;
	SaveProc                    saveproc;
	ImportTest                  importtest;
	
	// Declare panel objects
	GeneralSettingsPanel        generalsettingspanel;
	CTSettingsPanel 	        ctsettingspanel;
	VTSettingsPanel	            vtsettingspanel;
	CurrentRatioResults         currentratioresults;
	VoltageRatioResults         voltageratioresults;
	MagCurveResults             magcurveresults;
	MagCurveResultsHandler      magcurveresultshandler;
	CurrentRatioResultsHandler  currentratioresultshandler;
	VoltageRatioResultsHandler  voltageratioresultshandler;
    GeneralSettingsPanel        reportgeneralsettingspanel;
	CTSettingsPanel             reportctsettingspanel;
	VTSettingsPanel             reportvtsettingspanel;
	CurrentRatioReportResults   reportcurrentratioresults;
	VoltageRatioReportResults   reportvoltageratioresults;
	MagCurveReportResults       reportmagcurveresults;
	VTReportSettings            vtreportsettings;
	CTReportSettings            ctreportsettings;
	GeneralReportSettings       generalreportsettings;
	ReportHeader                reportheader;
	ReportFooter                reportfooter;
	ReportPhaseCanvas           reportphasecanvas;
//	ReportAcceptButtonHandler   reportacceptbuttonhandler;
//	ReportIgnoreButtonHandler   reportignorebuttonhandler;
	HelpContentsHandler         helpcontentshandler;
	KneePointTable              kneepointtable;
	KneePointTableHandler       kneepointtablehandler;
//	NextTestHandler             nexttesthandler;
	TextFileHandler             textfilehandler;
    	
	class SymWindow extends java.awt.event.WindowAdapter 
	{
		public void windowClosing(java.awt.event.WindowEvent event)
		{
			Object object = event.getSource();
			if (object == Ctmag.this)
				Frame1_WindowClosing(event);
		}
	}
	
	void Frame1_WindowClosing(java.awt.event.WindowEvent event)
	{
		setVisible(false);	// hide the Frame
		dispose();			// free the system resources
		System.exit(0);		// close the application
	}
	
	public class SymAction implements java.awt.event.ActionListener
	{
		public void actionPerformed(java.awt.event.ActionEvent event)
		{
			Object object = event.getSource();

			if (object == mihelpitems)
				miAbout_Action(event);
			else if (object == miExit)
				miExit_Action(event);
		}
	}
	
	void miAbout_Action(java.awt.event.ActionEvent event)
	{
		//{{CONNECTION
		// Action from About Create and show as modal
		(new AboutDialog(this, true)).setVisible(true);
		//}}
	}
	
	void miExit_Action(java.awt.event.ActionEvent event)
	{
		//{{CONNECTION
		// Action from Exit Create and show as modal
		(new QuitDialog(this, true)).setVisible(true);
		//}}
	}
}

